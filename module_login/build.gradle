if (isRelease) { //判断是否是正式环境
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}

android {
    def androidVersion = rootProject.ext.androidVersion
    compileSdkVersion androidVersion.compileSdkVersion
    buildToolsVersion androidVersion.buildToolsVersion

    defaultConfig {
        if (!isRelease) {
            applicationId appId.module_login
        }
//        applicationId "com.himi.module_login"
        minSdkVersion androidVersion.minSdkVersion
        targetSdkVersion androidVersion.targetSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            if (isRelease) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    exclude 'debug/**'
                }
            } else {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    annotationProcessor deps.arouter_compiler
    implementation project(path: ':module_lib')
}
