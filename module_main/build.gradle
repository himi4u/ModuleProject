if(isRelease){ //判断是否是正式环境
    apply plugin: 'com.android.library'
}else {
    apply plugin: 'com.android.application'
}


android {
    def androidVersion = rootProject.ext.androidVersion
    compileSdkVersion androidVersion.compileSdkVersion
    buildToolsVersion androidVersion.buildToolsVersion

    defaultConfig {
        if(!isRelease){
            applicationId appId.module_main
        }
//        applicationId "com.himi.module_main"
        minSdkVersion androidVersion.minSdkVersion
        targetSdkVersion androidVersion.targetSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

    }
    sourceSets {
        main {
            if (!isRelease) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                //集成开发模式下排除debug文件夹中的所有Java文件
                java {
                    exclude 'debug/**'
                }
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation project(path: ':module_lib')
    annotationProcessor deps.arouter_compiler
}
